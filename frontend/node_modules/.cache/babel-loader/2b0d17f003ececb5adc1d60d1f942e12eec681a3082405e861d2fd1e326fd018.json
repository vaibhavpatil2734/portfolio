{"ast":null,"code":"import React,{useState,useEffect,useMemo}from\"react\";import ReactImageLightbox from\"react-image-lightbox\";import\"react-image-lightbox/style.css\";// Import Lightbox styles\nimport\"./Gallery.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Gallery(){const images=useMemo(()=>[{src:\"./ESPArtboard 1.jpg\",caption:\"Smart projects ahead!\"},{src:\"./SnakeArtboard 1.jpg\",caption:\"Save snakes, save nature!\"},{src:\"./BugArtboard 1.jpg\",caption:\"Find, fix, repeat!\"},{src:\"./projectArtboard 1.jpg\",caption:\"Finally, it’s live!\"},{src:\"./MEArtboard 1.jpg\",caption:\"Passion meets logic!\"}],[]);const[currentImage,setCurrentImage]=useState(0);const[isLightboxOpen,setIsLightboxOpen]=useState(false);const[fade,setFade]=useState(false);// Function to open lightbox\nconst openLightbox=()=>setIsLightboxOpen(true);// Function to close lightbox\nconst closeLightbox=()=>setIsLightboxOpen(false);// Auto-slide effect every 4 seconds with smooth caption change\nuseEffect(()=>{const interval=setInterval(()=>{setFade(true);setTimeout(()=>{setCurrentImage(prev=>(prev+1)%images.length);setFade(false);},500);},5000);return()=>clearInterval(interval);},[images.length]);// Use images.length instead of images to avoid dependency issues\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"gallery-container\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h6\",{className:\"gallery-title\",children:\"My Gallery\"}),/*#__PURE__*/_jsx(\"div\",{className:\"gallery-image-container\",onClick:openLightbox,children:/*#__PURE__*/_jsx(\"img\",{src:images[currentImage].src,alt:\"Gallery item \".concat(currentImage+1),className:\"gallery-image\"})}),isLightboxOpen&&/*#__PURE__*/_jsx(ReactImageLightbox,{mainSrc:images[currentImage].src,nextSrc:images[(currentImage+1)%images.length].src,prevSrc:images[(currentImage-1+images.length)%images.length].src,onCloseRequest:closeLightbox,onMovePrevRequest:()=>setCurrentImage((currentImage-1+images.length)%images.length),onMoveNextRequest:()=>setCurrentImage((currentImage+1)%images.length)}),/*#__PURE__*/_jsx(\"div\",{className:\"caption-box \".concat(fade?\"fade-out\":\"fade-in\"),children:/*#__PURE__*/_jsx(\"h4\",{className:\"caption-text\",children:images[currentImage].caption})})]})});}","map":{"version":3,"names":["React","useState","useEffect","useMemo","ReactImageLightbox","jsx","_jsx","jsxs","_jsxs","Gallery","images","src","caption","currentImage","setCurrentImage","isLightboxOpen","setIsLightboxOpen","fade","setFade","openLightbox","closeLightbox","interval","setInterval","setTimeout","prev","length","clearInterval","className","children","onClick","alt","concat","mainSrc","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest"],"sources":["D:/gitOne/portfolio/frontend/src/Panel/Gallery/Gallery.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport ReactImageLightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\"; // Import Lightbox styles\r\nimport \"./Gallery.css\";\r\n\r\nexport default function Gallery() {\r\n  const images = useMemo(() => [\r\n    { src: \"./ESPArtboard 1.jpg\", caption: \"Smart projects ahead!\" },\r\n    { src: \"./SnakeArtboard 1.jpg\", caption: \"Save snakes, save nature!\" },\r\n    { src: \"./BugArtboard 1.jpg\", caption: \"Find, fix, repeat!\" },\r\n    { src: \"./projectArtboard 1.jpg\", caption: \"Finally, it’s live!\" },\r\n    { src: \"./MEArtboard 1.jpg\", caption: \"Passion meets logic!\" },\r\n  ], []);\r\n\r\n  const [currentImage, setCurrentImage] = useState(0);\r\n  const [isLightboxOpen, setIsLightboxOpen] = useState(false);\r\n  const [fade, setFade] = useState(false);\r\n\r\n  // Function to open lightbox\r\n  const openLightbox = () => setIsLightboxOpen(true);\r\n\r\n  // Function to close lightbox\r\n  const closeLightbox = () => setIsLightboxOpen(false);\r\n\r\n  // Auto-slide effect every 4 seconds with smooth caption change\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setFade(true);\r\n      setTimeout(() => {\r\n        setCurrentImage((prev) => (prev + 1) % images.length);\r\n        setFade(false);\r\n      }, 500);\r\n    }, 5000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [images.length]); // Use images.length instead of images to avoid dependency issues\r\n\r\n  return (\r\n    <div className=\"gallery-container\">\r\n      <div>\r\n        <h6 className=\"gallery-title\">My Gallery</h6>\r\n        <div className=\"gallery-image-container\" onClick={openLightbox}>\r\n          <img\r\n            src={images[currentImage].src}\r\n            alt={`Gallery item ${currentImage + 1}`}\r\n            className=\"gallery-image\"\r\n          />\r\n        </div>\r\n        {isLightboxOpen && (\r\n          <ReactImageLightbox\r\n            mainSrc={images[currentImage].src}\r\n            nextSrc={images[(currentImage + 1) % images.length].src}\r\n            prevSrc={images[(currentImage - 1 + images.length) % images.length].src}\r\n            onCloseRequest={closeLightbox}\r\n            onMovePrevRequest={() =>\r\n              setCurrentImage((currentImage - 1 + images.length) % images.length)\r\n            }\r\n            onMoveNextRequest={() =>\r\n              setCurrentImage((currentImage + 1) % images.length)\r\n            }\r\n          />\r\n        )}\r\n\r\n        <div className={`caption-box ${fade ? \"fade-out\" : \"fade-in\"}`}>\r\n          <h4 className=\"caption-text\">{images[currentImage].caption}</h4>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}